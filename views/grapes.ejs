<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <title>GrapesJS Preset Webpage</title>
    <link href="https://unpkg.com/grapesjs/dist/css/grapes.min.css" rel="stylesheet">
    <script src="https://unpkg.com/grapesjs"></script>
    <style>
      body,
      html {
        height: 100%;
        margin: 0;
      }
    </style>
  </head>
  <body>

    <div id="gjs" style="height:0px; overflow:hidden">
      <div class="panel">
        <h1 class="welcome">Welcome to</h1>
        <div class="big-title">
          <span>GrapesJS</span>
        </div>
        <div class="description">
            This is just for testing purpose
        </div>
      </div>
      <style>
        .panel {
          width: 90%;
          max-width: 700px;
          border-radius: 3px;
          padding: 30px 20px;
          margin: 150px auto 0px;
          background-color: skyblue;
          box-shadow: 0px 3px 10px 0px rgba(0,0,0,0.25);
          /* color:rgba(255,255,255,0.75); */
          color: black;
          font: caption;
          font-weight: 100;
        }

        .welcome {
          text-align: center;
          font-weight: 100;
          margin: 0px;
        }

        .logo {
          width: 70px;
          height: 70px;
          vertical-align: middle;
        }

        .logo path {
          pointer-events: none;
          fill: none;
          stroke-linecap: round;
          stroke-width: 7;
          stroke: #fff
        }

        .big-title {
          text-align: center;
          font-size: 3.5rem;
          margin: 15px 0;
        }

        .description {
          text-align: justify;
          font-size: 1rem;
          line-height: 1.5rem;
        }
      </style>
    </div>


    <script type="text/javascript">
      window.onload = () => {
        window.editor = grapesjs.init({
          height: '100%',
          showOffsets: true,
          noticeOnUnload: false,
          storageManager: {
            type: 'local', // You can choose between 'local' and 'remote'
            autoload: true,
            stepsBeforeSave: 1, // Number of changes before autosaving
            // stepsBeforeSave: 1, // Number of changes before autosaving
            urlStore: '/save-endpoint', // URL to the save endpoint on your server
            urlLoad: '/load-endpoint', // URL to the load endpoint on your server
          },
          container: '#gjs',
          fromElement: true,

          plugins: ['grapesjs-preset-webpage'],
          pluginsOpts: {
            'grapesjs-preset-webpage': {}
          }
        });
        
        editor.BlockManager.add('Heading', {
  label: 'Heading',
  category: 'Typography',
  content: `<section>
        <h1 style="">paragraph</h1>
        </section>`
})

editor.BlockManager.add('Paragraph', {
  label: 'paragraph',
  category: 'Typography',
  content: `<section>
        <p style="">paragraph</p>
        </section>`
})

editor.BlockManager.add('Image', {
  label: 'Image',
  category: 'Media',
  content: {type:'image'}
})

editor.BlockManager.add('Video', {
  label: 'Video',
  category: 'Media',
  content: {type:'video'}
})

editor.BlockManager.add('Audio', {
  label: 'Audio',
  category: 'Media',
  content: `
            <audio controls>
               <source src="" type="audio/ogg">
               <source src="" type="audio/mpeg">
               Your browser does not support the audio tag.
            </audio>
            `,
})

editor.BlockManager.add('Navbar', {
    label: 'Navbar',
  category: 'Navigation',
  content: `
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
  <a class="navbar-brand" href="#">Navbar w/ text</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse" id="navbarText">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active">
        <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">Features</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">Pricing</a>
      </li>
    </ul>
    <span class="navbar-text">
    </span>
  </div>
</nav>`
})

editor.BlockManager.add('Button', {
  label: 'Button',
  category: 'Navigation',
  content: `
  <button type="button" class="btn">Button</button>
  `,
})

};
    </script>
  </body>
</html>